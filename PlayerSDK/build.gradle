

def v = "2.0.1"  // duplicated in res/config.xml as well

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:1.2.2'
    }
}

apply plugin: 'com.android.library'

android {
    compileSdkVersion 19
    buildToolsVersion '19.1.0'

    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 16
        versionCode 3
        versionName v
    }

    buildTypes {
        debug {

        }

        release {
            minifyEnabled false
        }
    }

    lintOptions {
        abortOnError true
    }

}


dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:19.1.0'
    compile 'com.android.support:support-annotations:22.1.1'

    compile 'com.squareup.retrofit:retrofit:1.6.1'
    compile 'com.squareup.okhttp:okhttp:2.0.0'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.0.0'
    compile 'com.squareup:otto:1.3.5'
    compile 'com.caverock:androidsvg:1.2.1'
    compile 'de.greenrobot:eventbus:2.2.1'
}

// Deployment to maven package repository


apply plugin: 'maven'
apply plugin: 'signing'

def getRepositoryUsername() {
  return hasProperty('sonatypeUsername') ? sonatypeUsername : "";
}

def getRepositoryPassword() {
  return hasProperty('sonatypePassword') ? sonatypePassword : "";
}

signing {
    // This requires a gradle.properties file with signing.keyId, signing.password,
    // signing.secretKeyRingFile

    sign configurations.archives
}

uploadArchives {
    repositories.mavenDeployer {

        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

        repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
            authentication(userName: getRepositoryUsername(),
            password: getRepositoryPassword())
        }

        snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
            authentication(userName: getRepositoryUsername(),
            password: getRepositoryPassword())
        }

        pom.version = v
        pom.groupId = "fm.feed.android"

        pom.project {
            name 'Feed.fm client library for Android'
            packaging 'aar'
            description 'This is an Android library for making use of the Feed.fm \'music as a service\' REST API. This library retrieves and handles playback of audio files and has a simple UI to serve as the foundation for your own music player.'
            url 'https://developer.feed.fm/documentation'


            scm {
                url 'scm:git@github.com:fuzz-radio/Android-SDK.git'
                connection 'scm:git@github.com:fuzz-radio/Android-SDK.git'
                developerConnection 'scm:git@github.com:fuzz-radio/Android-SDK.git'
            }

            licenses {
                license {
                    name 'The MIT License (MIT)'
                    url 'http://opensource.org/licenses/MIT'
                    distribution 'repo'
                }
            }

            developers {
                developer {
                    id 'feedfm'
                    name 'Eric Lambrecht'
                    email 'eric@feed.fm'
                }
                developer {
                    id 'MartinH'
                    name 'Martin Harkins'
                    email 'mharkins@gmail.com'
                }
            }
        }
    }

}

